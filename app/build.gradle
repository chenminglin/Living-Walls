plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
}

android {
    namespace 'com.bethena.healingwall'
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        applicationId "com.bethena.healingwall"
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        setProperty("archivesBaseName", applicationId + "-v" + versionCode + "(" + versionName + ")-${releaseTime()}")
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-remove-log.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
//    buildFeatures {
//        compose true
//    }
//    composeOptions {
//        kotlinCompilerExtensionVersion '1.1.1'
//    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            def appName = "HealingWalls"
            def buildTypeName = variant.buildType.name
            def fileName = "${appName}" + "_${releaseTime()}_${buildTypeName}.apk"
            outputFileName = fileName

        }
    }
}

def releaseTime() {
    return new Date().format("MMdd_HHmm", TimeZone.getTimeZone("GMT+8:00"))
}

dependencies {
    implementation rootProject.ext.depsLibs.androidxCoreKTX
    implementation rootProject.ext.depsLibs.androidxAppCompat
    implementation rootProject.ext.depsLibs.googleMaterial
    implementation rootProject.ext.depsLibs.androidxConstrant
    implementation rootProject.ext.depsLibs.viewModelKtx
    implementation rootProject.ext.depsLibs.androidxPreference
    implementation rootProject.ext.depsLibs.androidxPreferenceKtx

    implementation rootProject.ext.depsLibs.androidxNavigationFragment
    implementation rootProject.ext.depsLibs.androidxNavigationUI
    implementation rootProject.ext.depsLibs.androidxNavigationFragmentKtx
    implementation rootProject.ext.depsLibs.androidxNavigationUIKtx


    implementation platform('com.google.firebase:firebase-bom:31.2.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    testImplementation rootProject.ext.depsLibs.junit
    androidTestImplementation rootProject.ext.depsLibs.androidxJunit
    androidTestImplementation rootProject.ext.depsLibs.androidxEspresso

    implementation project(path: ':walls:circle')
    implementation project(path: ':walls:starry_sky')
    implementation project(path: ':walls:rainbow')
    implementation project(path: ':walls:space')

}